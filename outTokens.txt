KEYWORD class
IDENTIFIER Factorial
SYMBOL {
KEYWORD public
KEYWORD static
KEYWORD void
IDENTIFIER main
SYMBOL (
IDENTIFIER String
SYMBOL [
SYMBOL ]
IDENTIFIER a
SYMBOL )
SYMBOL {
IDENTIFIER System
SYMBOL .
IDENTIFIER out
SYMBOL .
IDENTIFIER println
SYMBOL (
KEYWORD new
IDENTIFIER Fac
SYMBOL (
SYMBOL )
SYMBOL .
IDENTIFIER ComputeFac
SYMBOL (
NUMBER 10
SYMBOL )
SYMBOL )
SYMBOL ;
SYMBOL }
SYMBOL }
KEYWORD class
IDENTIFIER Fac
SYMBOL {
KEYWORD public
KEYWORD int
IDENTIFIER ComputeFac
SYMBOL (
KEYWORD int
IDENTIFIER num
SYMBOL )
SYMBOL {
KEYWORD int
IDENTIFIER numaux
SYMBOL ;
KEYWORD if
SYMBOL (
IDENTIFIER num
OPERATOR <
NUMBER 1
SYMBOL )
IDENTIFIER numaux
OPERATOR =
NUMBER 1
SYMBOL ;
KEYWORD else
IDENTIFIER numaux
OPERATOR =
IDENTIFIER num
OPERATOR *
SYMBOL (
KEYWORD this
SYMBOL .
IDENTIFIER ComputeFac
SYMBOL (
IDENTIFIER num
OPERATOR -
NUMBER 1
SYMBOL )
SYMBOL )
SYMBOL ;
KEYWORD return
IDENTIFIER numaux
SYMBOL ;
SYMBOL }
SYMBOL }
